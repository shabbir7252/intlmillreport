@*@using ImillReports.ViewModels*@
@{
    ViewBag.Title = "SALES ANALYTICS";
    ViewBag.SubTitle = "";

    var fromDate = ViewBag.fromDate;
    var toDate = ViewBag.toDate;

    var fromD = ViewBag.fromD;
    var toD = ViewBag.toD;
    var jsonResult = ViewBag.jsonResult;
    var jsonResult2 = ViewBag.jsonResult2;

    //var DSTop5BranchProdByVal = (List<Product>)ViewBag.DSTop5BranchProdByVal;
    //var DSTop5HoProdByVal = (List<Product>)ViewBag.DSTop5HoProdByVal;

    //var DSTop5ProdByKg = (List<Product>)ViewBag.DSTop5ProdByKg;
    //var DSTop5ProdHoByKg = (List<Product>)ViewBag.DSTop5ProdHoByKg;

    //var DSTop5ProdByQty = (List<Product>)ViewBag.DSTop5ProdByQty;
    //var DSTop5ProdHoByQty = (List<Product>)ViewBag.DSTop5ProdHoByQty;

}

<style>
    .e-grid .e-rowcell.customcss {
        font-size: 11px;
    }

    .e-grid .e-headercell.customcss {
        font-size: 11px;
    }

    .e-grid .e-summaryrow .e-summarycell, .e-grid .e-summaryrow .e-templatecell {
        font-size: 11px;
    }

    .e-headertext {
        font-size: 11px;
    }

    .e-grid .e-headercell.custom-header-css {
        background-color: #eee8aa;
    }

    .e-grid .e-headercell.custom-header-qty-css {
        background-color: #d9ff81;
    }

    .e-grid .e-headercell.custom-header-kg-css {
        background-color: #81d8ff;
    }

    .hiddenRow {
        padding: 0 4px !important;
        background-color: #eeeeee;
        font-size: 13px;
    }

    .accordian-body span {
        color: #a2a2a2 !important;
    }
</style>

<div class="container-fluid">
    @if (ViewBag.validation == "true")
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-danger alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                    Start Date is Greater then End Date
                </div>
            </div>
        </div>
    }
    <div class="row clearfix">
        <div class="col-12">
            <div class="card">
                @*@using (Html.BeginForm("BranchSales", "Dashboard", FormMethod.Get))
                    {*@
                <div class="row p-3">
                    <div class="col-3">
                        @Html.EJS().DateTimePicker("fromDate").Format("dd/MMM/yyyy hh:mm a").Value(@fromD).Render()
                    </div>
                    <div class="col-3">
                        @Html.EJS().DateTimePicker("toDate").Format("dd/MMM/yyyy hh:mm a").Value(@toD).Render()
                    </div>

                    <div class="col-2">
                        @*<button type="submit" class="btn btn-raised bg-black waves-effect waves-light">Get Records</button>*@
                        <button class="btn btn-raised bg-black waves-effect waves-light" onclick="GetRecords();GetRecordsDetail()">Get Records</button>
                    </div>
                </div>
                @*}*@
            </div>
        </div>
    </div>

    <div class="preloader loading">
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
    </div>

    <div class="alert alert-dark loading-text" role="alert">
        <h6 class="text-center loading-text mt-2">Loading Sales Data. (<span id="secondsCounter"></span>s)</h6>
    </div>

    <div class="branch-sales mb-1"></div>


    <div class="preloader-detail loading">
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
        <span class="slice"></span>
    </div>
    <div class="alert alert-dark loading-detail-text" role="alert">
        <h6 class="text-center loading-detail-text mt-2">Loading Top 10 Details from <span id="sales-records-count" class="text-dark"></span> Sales records. It may take more time (<span id="secondsDetailCounter"></span>s)</h6>
    </div>

    <div class="branch-sales-detail mb-1"></div>

</div>


@section scripts {
    <script>

        //$(".sec-online-sales").hide();
        //$(".btn-online-sales").click(function () {
        //    $(".sec-online-sales").toggle();
        //});

        //$('.accordion-toggle').click(function () {
        //    $('.hiddenRow').hide();
        //    $(this).next('tr').find('.hiddenRow').show();
        //});

        // branch-sales-detail

        $('.preloader').hide();
        $('.loading-text').hide();

        function GetRecords() {
            $('.preloader').show();
            $('.loading-text').show();
            $('.branch-sales').html("");
            $('#secondsCounter').html("");

            var counter = 0;
            var myInterval = setInterval(function () {
                ++counter;
                $('#secondsCounter').html(counter);
            }, 1000);

            var fromDate = $('#fromDate').val();
            var toDate = $('#toDate').val();

            $.ajax({
                type: 'GET',
                data: { fromDate: fromDate, toDate: toDate},
                url: '@Url.Action("BranchSalesRecord", "Dashboard")',
                success: function (response) {

                    counter = 0
                    clearInterval(myInterval);
                    $('.preloader').hide();
                    $('.loading-text').hide();
                    $('.branch-sales').html(response);
                    $('#secondsCounter').html("");
                    var data = localStorage.getItem("ColumnChartData");
                    var c = document.getElementById("barChart");
                    var ctx = c.getContext("2d");
                    var myBarChart = new Chart(ctx, {
                        type: 'bar',
                        data: JSON.parse((data.replace(/(&quot\;)/g, "\""))).ChartData,
                        options: {
                            responsive: true,
                            legend: false
                        }
                    });

                    // GetRecordsDetail();
                },
                error: function (ex) {
                    alert(ex);
                    $('.preloader').hide();
                    counter = 0;
                    clearInterval(myInterval);
                }

            });
        }

        $('.preloader-detail').hide();
        $('.loading-detail-text').hide();

        function GetRecordsDetail() {

            $('.preloader-detail').show();
            $('.loading-detail-text').show();
            $('.branch-sales-detail').html("");
            $('#secondsDetailCounter').html("");
            var detailCounter = 0;
            clearInterval(myDetailInterval);
            var myDetailInterval = setInterval(function () {
                ++detailCounter;
                $('#secondsDetailCounter').html(detailCounter);
                var input = $('#salesRecordCount').html();
                console.log('input : ', input);
                if (input !== null || input !== '') {
                    $('#sales-records-count').html(addCommas(+input));
                }
            }, 1000);

            var fromDate = $('#fromDate').val();
            var toDate = $('#toDate').val();

            $.ajax({
                type: 'GET',
                data: { fromD: fromDate, toD: toDate},
                url: '@Url.Action("BranchSalesDetailRecord", "Dashboard")',
                success: function (response) {
                    detailCounter = 0;
                    clearInterval(myDetailInterval);
                    $('.preloader-detail').hide();
                    $('.loading-detail-text').hide();
                    $('.branch-sales-detail').html(response);
                    $('#secondsDetailCounter').html("");
                },
                error: function (ex) {
                    alert(ex);
                    detailCounter = 0;
                    clearInterval(myDetailInterval);
                    $('.preloader-detail').hide();
                }
            });
        }

        $(function () {
            GetRecords();
            GetRecordsDetail();
        });

        function addCommas(x) {
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        }

    </script>
}
